package puzzles;

import java.util.List;
import search.*;

/**
 * GUI interface the the source code of;
 * Luger, G. AI Algorithms, Data Structures and Idioms in Prolog, Lisp and Java 
 * http://www.cs.unm.edu/~luger/ai-final/software.html
 * 
 * @author Martin Beck
 */

public class GUITester extends javax.swing.JFrame {

    private AbstractState problemType;
    private AbstractSolver solverType;
    

    /** Creates new form GUITester */
    public GUITester() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        puzzleButtonGroup = new javax.swing.ButtonGroup();
        searchTypeButtonGroup = new javax.swing.ButtonGroup();
        runButton = new javax.swing.JButton();
        farmerWolfRadioButton = new javax.swing.JRadioButton();
        slidingTileRadioButton = new javax.swing.JRadioButton();
        waterJugRadioButton = new javax.swing.JRadioButton();
        foxesChickensRadioButton = new javax.swing.JRadioButton();
        breadthFirstRadioButton = new javax.swing.JRadioButton();
        depthFirstRadioButton = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        solutionTextArea = new javax.swing.JTextArea();
        bestFirstRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        runButton.setText("Run");
        runButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runButtonActionPerformed(evt);
            }
        });

        puzzleButtonGroup.add(farmerWolfRadioButton);
        farmerWolfRadioButton.setText("Farmer Wolf Goat");

        puzzleButtonGroup.add(slidingTileRadioButton);
        slidingTileRadioButton.setText("Sliding Tile");

        puzzleButtonGroup.add(waterJugRadioButton);
        waterJugRadioButton.setText("Water Jug");

        puzzleButtonGroup.add(foxesChickensRadioButton);
        foxesChickensRadioButton.setSelected(true);
        foxesChickensRadioButton.setText("Foxes Chickens");

        searchTypeButtonGroup.add(breadthFirstRadioButton);
        breadthFirstRadioButton.setSelected(true);
        breadthFirstRadioButton.setText("Breadth First");

        searchTypeButtonGroup.add(depthFirstRadioButton);
        depthFirstRadioButton.setText("Depth First");

        solutionTextArea.setColumns(20);
        solutionTextArea.setRows(5);
        jScrollPane1.setViewportView(solutionTextArea);

        searchTypeButtonGroup.add(bestFirstRadioButton);
        bestFirstRadioButton.setText("Best First");
        bestFirstRadioButton.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(depthFirstRadioButton)
                    .addComponent(breadthFirstRadioButton)
                    .addComponent(waterJugRadioButton)
                    .addComponent(slidingTileRadioButton)
                    .addComponent(foxesChickensRadioButton)
                    .addComponent(runButton)
                    .addComponent(bestFirstRadioButton)
                    .addComponent(farmerWolfRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(runButton)
                        .addGap(30, 30, 30)
                        .addComponent(foxesChickensRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slidingTileRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(waterJugRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(farmerWolfRadioButton)
                        .addGap(69, 69, 69)
                        .addComponent(breadthFirstRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(depthFirstRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bestFirstRadioButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void runButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runButtonActionPerformed

    solutionTextArea.setText("");

    if (farmerWolfRadioButton.isSelected()) {
        problemType = new FarmerWolfGoatState();
    } else if (foxesChickensRadioButton.isSelected()) {
        problemType = new FoxesChickens();
    } else if (waterJugRadioButton.isSelected()) {
        problemType = new WaterJugState();
    } else if (slidingTileRadioButton.isSelected()) {
        problemType = new SlidingTileState();
    }

    if (breadthFirstRadioButton.isSelected()) {
        solverType = new BreadthFirstSolver();
    } else if (depthFirstRadioButton.isSelected()) {
        solverType = new DepthFirstSolver();
    } else if (bestFirstRadioButton.isSelected()) {
        solverType = new BestFirstSolver();
    }

    trySolver();
}//GEN-LAST:event_runButtonActionPerformed

    private void trySolver() {
        solutionTextArea.append("Solving with " + solverType.toString() + "\n");

        List<AbstractState> solution = solverType.solve(problemType);
        
        solutionTextArea.append("  Total states visited (i.e. number in closed list): " + solverType.getVisitedStateCount() + " \n \n");
        solutionTextArea.append("  States yet to visit (i.e. number in open list): " + solverType.getToVisitStateCount() + " \n \n");

        solutionTextArea.append(" Solution:\n");

        if (solution == null) {
            solutionTextArea.append(" None found. ");
            
        } else {
            for (AbstractState s : solution) {
                solutionTextArea.append("  " + s + "\n\n");
            }

            solutionTextArea.append("\nNumber of states in solution " + solution.size());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUITester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUITester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUITester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUITester.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new GUITester().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bestFirstRadioButton;
    private javax.swing.JRadioButton breadthFirstRadioButton;
    private javax.swing.JRadioButton depthFirstRadioButton;
    private javax.swing.JRadioButton farmerWolfRadioButton;
    private javax.swing.JRadioButton foxesChickensRadioButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.ButtonGroup puzzleButtonGroup;
    private javax.swing.JButton runButton;
    private javax.swing.ButtonGroup searchTypeButtonGroup;
    private javax.swing.JRadioButton slidingTileRadioButton;
    private javax.swing.JTextArea solutionTextArea;
    private javax.swing.JRadioButton waterJugRadioButton;
    // End of variables declaration//GEN-END:variables
}
